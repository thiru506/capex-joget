
(function(){function addEvent(obj,type,fn){if(obj.addEventListener){obj.addEventListener(type,fn,false);EventCache.add(obj,type,fn);}
else if(obj.attachEvent){obj["e"+type+fn]=fn;obj[type+fn]=function(){obj["e"+type+fn](window.event);}
obj.attachEvent("on"+type,obj[type+fn]);EventCache.add(obj,type,fn);}
else{obj["on"+type]=obj["e"+type+fn];}}
var EventCache=function(){var listEvents=[];return{listEvents:listEvents,add:function(node,sEventName,fHandler){listEvents.push(arguments);},flush:function(){var i,item;for(i=listEvents.length-1;i>=0;i=i-1){item=listEvents[i];if(item[0].removeEventListener){item[0].removeEventListener(item[1],item[2],item[3]);};if(item[1].substring(0,2)!="on"){item[1]="on"+item[1];};if(item[0].detachEvent){item[0].detachEvent(item[1],item[2]);};item[0][item[1]]=null;};}};}();String.prototype.startsWith=function(prefix){return this.indexOf(prefix)===0;};String.prototype.endsWith=function(suffix){return this.match(suffix+"$")==suffix;};function hijackStandard(){XMLHttpRequest.prototype._open=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(method,url,async,user,pass){this.url=url;this._open.apply(this,arguments);};XMLHttpRequest.prototype._send=XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.send=function(data){if(this.onsend!=null){this.onsend.apply(this,arguments);}
this._send.apply(this,arguments);};}
function hijackExplorer(){var _XMLHttpRequest=window.XMLHttpRequest;function alloc_XMLHttpRequest(){this.base=_XMLHttpRequest?new _XMLHttpRequest:new window.ActiveXObject("Microsoft.XMLHTTP");}
function init_XMLHttpRequest(){return new alloc_XMLHttpRequest;}
init_XMLHttpRequest.prototype=alloc_XMLHttpRequest.prototype;init_XMLHttpRequest.UNSENT=0;init_XMLHttpRequest.OPENED=1;init_XMLHttpRequest.HEADERS_RECEIVED=2;init_XMLHttpRequest.LOADING=3;init_XMLHttpRequest.DONE=4;init_XMLHttpRequest.prototype.status=0;init_XMLHttpRequest.prototype.statusText="";init_XMLHttpRequest.prototype.readyState=init_XMLHttpRequest.UNSENT;init_XMLHttpRequest.prototype.responseText="";init_XMLHttpRequest.prototype.responseXML=null;init_XMLHttpRequest.prototype.onsend=null;init_XMLHttpRequest.url=null;init_XMLHttpRequest.onreadystatechange=null;init_XMLHttpRequest.prototype.open=function(method,url,async,user,pass){var self=this;this.url=url;this.base.onreadystatechange=function(){try{self.status=self.base.status;}catch(e){}
try{self.statusText=self.base.statusText;}catch(e){}
try{self.readyState=self.base.readyState;}catch(e){}
try{self.responseText=self.base.responseText;}catch(e){}
try{self.responseXML=self.base.responseXML;}catch(e){}
if(self.onreadystatechange!=null){self.onreadystatechange.apply(this,arguments);}}
this.base.open(method,url,async,user,pass);};init_XMLHttpRequest.prototype.send=function(data){if(this.onsend!=null){this.onsend.apply(this,arguments);}
this.base.send(data);};init_XMLHttpRequest.prototype.abort=function(){this.base.abort();};init_XMLHttpRequest.prototype.getAllResponseHeaders=function(){return this.base.getAllResponseHeaders();};init_XMLHttpRequest.prototype.getResponseHeader=function(name){return this.base.getResponseHeader(name);};init_XMLHttpRequest.prototype.setRequestHeader=function(name,value){return this.base.setRequestHeader(name,value);};window.XMLHttpRequest=init_XMLHttpRequest;}
function isValidDomain(current,target){var result=false;if(current==target){result=true;}else if(csrfArgs.DOMAIN_STRICT==false){if(target.charAt(0)=='.'){result=current.endsWith(target);}else{result=current.endsWith('.'+target);}}
return result;}
function isValidUrl(src){var result=false;if(src.substring(0,7)=="http://"||src.substring(0,8)=="https://"){var token="://";var index=src.indexOf(token);var part=src.substring(index+token.length);var domain="";for(var i=0;i<part.length;i++){var character=part.charAt(i);if(character=='/'||character==':'||character=='#'){break;}else{domain+=character;}}
result=isValidDomain(document.domain,domain);}else if(src.charAt(0)=='#'){result=false;}else if(!src.startsWith("//")&&(src.charAt(0)=='/'||src.indexOf(':')==-1)){result=true;}
return result;}
function parseUri(url){var uri="";var token="://";var index=url.indexOf(token);var part="";if(index>0){part=url.substring(index+token.length);}else if(url.charAt(0)!='/'){part=csrfArgs.CONTEXT_PATH+"/"+url;}else{part=url;}
var uriContext=(index==-1);for(var i=0;i<part.length;i++){var character=part.charAt(i);if(character=='/'){uriContext=true;}else if(uriContext==true&&(character=='?'||character=='#')){uriContext=false;break;}
if(uriContext==true){uri+=character;}}
return uri;}
function injectTokenForm(form,tokenName,tokenValue,pageTokens,injectGetForms){if(!injectGetForms){var method=form.getAttribute("method");if((typeof method!='undefined')&&method!=null&&method.toLowerCase()=="get"){return;}}
var action=form.getAttribute("action");if(action!=null&&isValidUrl(action)){var uri=parseUri(action);var hidden=document.createElement("input");hidden.setAttribute("type","hidden");hidden.setAttribute("name",tokenName);hidden.setAttribute("value",(pageTokens[uri]!=null?pageTokens[uri]:tokenValue));form.appendChild(hidden);}}
function injectTokenAttribute(element,attr,tokenName,tokenValue,pageTokens){var location=element.getAttribute(attr);if(location!=null&&isValidUrl(location)){var uri=parseUri(location);var value=(pageTokens[uri]!=null?pageTokens[uri]:tokenValue);if(location.indexOf('?')!=-1){location=location+'&'+tokenName+'='+value;}else{location=location+'?'+tokenName+'='+value;}
try{element.setAttribute(attr,location);}catch(e){}}}
function injectTokens(tokenName,tokenValue){var pageTokens={};if(csrfArgs.TOKENS_PER_PAGE==true){pageTokens=requestPageTokens();}
var all=document.all?document.all:document.getElementsByTagName('*');var len=all.length;var injectForms=csrfArgs.INJECT_FORMS;var injectGetForms=csrfArgs.INJECT_GET_FORMS;var injectFormAttributes=csrfArgs.INJECT_FORM_ATTRIBUTES;var injectAttributes=csrfArgs.INJECT_ATTRIBUTES;for(var i=0;i<len;i++){var element=all[i];if(element.tagName.toLowerCase()=="form"){if(injectForms){injectTokenForm(element,tokenName,tokenValue,pageTokens,injectGetForms);}
if(injectFormAttributes){injectTokenAttribute(element,"action",tokenName,tokenValue,pageTokens);}}else if(injectAttributes){injectTokenAttribute(element,"src",tokenName,tokenValue,pageTokens);injectTokenAttribute(element,"href",tokenName,tokenValue,pageTokens);}}}
function requestPageTokens(){var xhr=window.XMLHttpRequest?new window.XMLHttpRequest:new window.ActiveXObject("Microsoft.XMLHTTP");var pageTokens={};xhr.open("POST",csrfArgs.SERVLET_PATH,false);xhr.send(null);var text=xhr.responseText;var name="";var value="";var nameContext=true;for(var i=0;i<text.length;i++){var character=text.charAt(i);if(character==':'){nameContext=false;}else if(character!=','){if(nameContext==true){name+=character;}else{value+=character;}}
if(character==','||(i+1)>=text.length){pageTokens[name]=value;name="";value="";nameContext=true;}}
return pageTokens;}
if(isValidDomain(document.domain,csrfArgs.DOMAIN_ORIGIN)){if(csrfArgs.INJECT_XHR==true){if(navigator.appName=="Microsoft Internet Explorer"){hijackExplorer();}else{hijackStandard();}
var xhr=window.XMLHttpRequest?new window.XMLHttpRequest:new window.ActiveXObject("Microsoft.XMLHTTP");var csrfToken={};xhr.open("POST",csrfArgs.SERVLET_PATH,false);xhr.setRequestHeader("FETCH-CSRF-TOKEN","1");xhr.send(null);var token_pair=xhr.responseText;token_pair=token_pair.split(":");var token_name=token_pair[0];var token_value=token_pair[1];XMLHttpRequest.prototype.onsend=function(data){if(isValidUrl(this.url)){this.setRequestHeader("X-Requested-With","XMLHttpRequest")
this.setRequestHeader(token_name,token_value);}};}
addEvent(window,'unload',EventCache.flush);addEvent(window,'load',function(){injectTokens(token_name,token_value);});}else{alert("OWASP CSRFGuard JavaScript was included from within an unauthorized domain!");}})();
